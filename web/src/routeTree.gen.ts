/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginImport } from './routes/login'
import { Route as IndexImport } from './routes/index'
import { Route as DevFileExplorerImport } from './routes/dev/fileExplorer'
import { Route as DevEditImport } from './routes/dev/edit'
import { Route as DevDashboardImport } from './routes/dev/dashboard'

// Create/Update Routes

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const DevFileExplorerRoute = DevFileExplorerImport.update({
  id: '/dev/fileExplorer',
  path: '/dev/fileExplorer',
  getParentRoute: () => rootRoute,
} as any)

const DevEditRoute = DevEditImport.update({
  id: '/dev/edit',
  path: '/dev/edit',
  getParentRoute: () => rootRoute,
} as any)

const DevDashboardRoute = DevDashboardImport.update({
  id: '/dev/dashboard',
  path: '/dev/dashboard',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/dev/dashboard': {
      id: '/dev/dashboard'
      path: '/dev/dashboard'
      fullPath: '/dev/dashboard'
      preLoaderRoute: typeof DevDashboardImport
      parentRoute: typeof rootRoute
    }
    '/dev/edit': {
      id: '/dev/edit'
      path: '/dev/edit'
      fullPath: '/dev/edit'
      preLoaderRoute: typeof DevEditImport
      parentRoute: typeof rootRoute
    }
    '/dev/fileExplorer': {
      id: '/dev/fileExplorer'
      path: '/dev/fileExplorer'
      fullPath: '/dev/fileExplorer'
      preLoaderRoute: typeof DevFileExplorerImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/dev/dashboard': typeof DevDashboardRoute
  '/dev/edit': typeof DevEditRoute
  '/dev/fileExplorer': typeof DevFileExplorerRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/dev/dashboard': typeof DevDashboardRoute
  '/dev/edit': typeof DevEditRoute
  '/dev/fileExplorer': typeof DevFileExplorerRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/dev/dashboard': typeof DevDashboardRoute
  '/dev/edit': typeof DevEditRoute
  '/dev/fileExplorer': typeof DevFileExplorerRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/login'
    | '/dev/dashboard'
    | '/dev/edit'
    | '/dev/fileExplorer'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/login' | '/dev/dashboard' | '/dev/edit' | '/dev/fileExplorer'
  id:
    | '__root__'
    | '/'
    | '/login'
    | '/dev/dashboard'
    | '/dev/edit'
    | '/dev/fileExplorer'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  LoginRoute: typeof LoginRoute
  DevDashboardRoute: typeof DevDashboardRoute
  DevEditRoute: typeof DevEditRoute
  DevFileExplorerRoute: typeof DevFileExplorerRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LoginRoute: LoginRoute,
  DevDashboardRoute: DevDashboardRoute,
  DevEditRoute: DevEditRoute,
  DevFileExplorerRoute: DevFileExplorerRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/login",
        "/dev/dashboard",
        "/dev/edit",
        "/dev/fileExplorer"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/dev/dashboard": {
      "filePath": "dev/dashboard.tsx"
    },
    "/dev/edit": {
      "filePath": "dev/edit.tsx"
    },
    "/dev/fileExplorer": {
      "filePath": "dev/fileExplorer.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
